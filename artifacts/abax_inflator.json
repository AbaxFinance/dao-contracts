{
  "source": {
    "hash": "0x3ab6536a97591516cf43e0858e79ac51acf8dfe808a497a6fe84351f5cf832a4",
    "language": "ink! 5.0.0",
    "compiler": "rustc 1.77.2",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "4.1.1",
      "rust_toolchain": "stable-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "abax_inflator",
    "version": "1.0.0",
    "authors": [""]
  },
  "image": "paritytech/contracts-verifiable:4.1.1",
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "admin",
            "type": {
              "displayName": ["AccountId"],
              "type": 9
            }
          },
          {
            "label": "abax_token_account_id",
            "type": {
              "displayName": ["AccountId"],
              "type": 9
            }
          },
          {
            "label": "inflation_distribution",
            "type": {
              "displayName": ["Vec"],
              "type": 15
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": ["ink_primitives", "ConstructorResult"],
          "type": 21
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": ["AccountId"],
        "type": 9
      },
      "balance": {
        "displayName": ["Balance"],
        "type": 31
      },
      "blockNumber": {
        "displayName": ["BlockNumber"],
        "type": 0
      },
      "chainExtension": {
        "displayName": ["ChainExtension"],
        "type": 39
      },
      "hash": {
        "displayName": ["Hash"],
        "type": 37
      },
      "maxEventTopics": 4,
      "staticBufferSize": 16384,
      "timestamp": {
        "displayName": ["Timestamp"],
        "type": 38
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "distribution",
            "type": {
              "displayName": ["Vec"],
              "type": 15
            }
          }
        ],
        "docs": [],
        "label": "InflationDistributionChanged",
        "module_path": "abax_inflator::modules::inflator::events",
        "signature_topic": "0xe7b2eb1e780f1b5b3268ec6bfa54defdf77bed0cde0fc31ffaf22cc3929b3a08"
      },
      {
        "args": [],
        "docs": [],
        "label": "InflationDistributed",
        "module_path": "abax_inflator::modules::inflator::events",
        "signature_topic": "0x9d1d74fc778b16d17ceea6cd50f3b81ba6d0c1b9eb7d2e07a1a40b3e5206de7a"
      },
      {
        "args": [
          {
            "docs": ["The account from which the tokens are transferred. `None` for minting operations."],
            "indexed": true,
            "label": "from",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          },
          {
            "docs": ["The account to which the tokens are transferred. `None` for burning operations."],
            "indexed": true,
            "label": "to",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          },
          {
            "docs": ["The amount of tokens transferred."],
            "indexed": false,
            "label": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 31
            }
          }
        ],
        "docs": ["Emitted when tokens are transferred, including zero value transfers."],
        "label": "Transfer",
        "module_path": "pendzl_contracts::token::psp22",
        "signature_topic": "0xb5b61a3e6a21a16be4f044b517c28ac692492f73c5bfd3f60178ad98c767f4cb"
      },
      {
        "args": [
          {
            "docs": ["The account of the token owner."],
            "indexed": true,
            "label": "owner",
            "type": {
              "displayName": ["AccountId"],
              "type": 9
            }
          },
          {
            "docs": ["The account of the authorized spender."],
            "indexed": true,
            "label": "spender",
            "type": {
              "displayName": ["AccountId"],
              "type": 9
            }
          },
          {
            "docs": ["The new allowance amount."],
            "indexed": false,
            "label": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 31
            }
          }
        ],
        "docs": ["Emitted when the allowance of a `spender` for an `owner` is set or changed."],
        "label": "Approval",
        "module_path": "pendzl_contracts::token::psp22",
        "signature_topic": "0x1a35e726f5feffda199144f6097b2ba23713e549bfcbe090c0981e3bcdfbcc1d"
      },
      {
        "args": [
          {
            "docs": ["The `RoleType` for which the admin role is changed. This is the role being modified."],
            "indexed": true,
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "docs": ["The `RoleType` representing the previous admin role for the `role`. Indicates the admin role before the change."],
            "indexed": false,
            "label": "previous",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "docs": ["The `RoleType` representing the new admin role set for the `role`. Indicates the updated admin role."],
            "indexed": false,
            "label": "new",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted when the admin role for a specific role is changed.",
          "",
          "This event is triggered whenever a `role`'s admin role is updated.",
          "It logs the `role` being modified, the `previous` admin role, and the `new` admin role set for that `role`."
        ],
        "label": "RoleAdminChanged",
        "module_path": "pendzl_contracts::access::access_control",
        "signature_topic": "0xde670cace683976bfdc92b54b661961802f8322e8cead41fd76e5d7ca65dc403"
      },
      {
        "args": [
          {
            "docs": ["The `RoleType` that is granted. This field identifies the specific role being assigned."],
            "indexed": true,
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "docs": ["The `AccountId` of the account receiving the `role`. Represents the beneficiary of the role assignment."],
            "indexed": true,
            "label": "grantee",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          },
          {
            "docs": ["The `AccountId` of the account that granted the `role`. This is the account responsible for the role assignment."],
            "indexed": true,
            "label": "grantor",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          }
        ],
        "docs": [
          "Emitted when a role is granted to an account.",
          "",
          "This event occurs when a new `role` is assigned to an `grantee`.",
          "The `grantor` who assigned the role is also logged."
        ],
        "label": "RoleGranted",
        "module_path": "pendzl_contracts::access::access_control",
        "signature_topic": "0x4178b665aa7310f609a3da6698348eabe212f3b0bd0386791eeae4924095b76b"
      },
      {
        "args": [
          {
            "docs": ["The `RoleType` that is revoked. Specifies the role being removed from the account."],
            "indexed": true,
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "docs": ["The `AccountId` of the account from which the `role` is being removed. Denotes the account losing the role."],
            "indexed": true,
            "label": "account",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          },
          {
            "docs": ["The `AccountId` of the account that performed the role revocation. Indicates who initiated the removal of the role."],
            "indexed": true,
            "label": "sender",
            "type": {
              "displayName": ["AccountId"],
              "type": 9
            }
          }
        ],
        "docs": [
          "Emitted when a role is revoked from an account.",
          "",
          "This event is triggered when an existing `role` is removed from an `account`.",
          "The `sender` who performed the revocation is also included."
        ],
        "label": "RoleRevoked",
        "module_path": "pendzl_contracts::access::access_control",
        "signature_topic": "0x00d57dbcb9a54f822039e86efe3513a9af40deb0e6a9ee6cecf39824f8d27e9b"
      }
    ],
    "lang_error": {
      "displayName": ["ink", "LangError"],
      "type": 28
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "AbaxInflatorView::abax_token_account_id",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 29
        },
        "selector": "0x32f26d12"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "AbaxInflatorView::inflation_distribution",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 30
        },
        "selector": "0x50d5e50f"
      },
      {
        "args": [
          {
            "label": "amount",
            "type": {
              "displayName": ["Balance"],
              "type": 31
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AbaxInflator::inflate",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 21
        },
        "selector": "0xa60df9ad"
      },
      {
        "args": [
          {
            "label": "inflation_distribution",
            "type": {
              "displayName": ["Vec"],
              "type": 15
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AbaxInflatorManage::set_inflation_distribution",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 21
        },
        "selector": "0x20c8da6c"
      },
      {
        "args": [
          {
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "label": "address",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AccessControl::has_role",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 32
        },
        "selector": "0xc1d9ac18"
      },
      {
        "args": [
          {
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AccessControl::get_role_admin",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 34
        },
        "selector": "0x83da3bb2"
      },
      {
        "args": [
          {
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "label": "account",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AccessControl::grant_role",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 35
        },
        "selector": "0x4ac062fd"
      },
      {
        "args": [
          {
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "label": "account",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AccessControl::revoke_role",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 35
        },
        "selector": "0x6e4f0991"
      },
      {
        "args": [
          {
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "label": "account",
            "type": {
              "displayName": ["Option"],
              "type": 8
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AccessControl::renounce_role",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 35
        },
        "selector": "0xeaf1248a"
      },
      {
        "args": [
          {
            "label": "role",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          },
          {
            "label": "new_admin",
            "type": {
              "displayName": ["RoleType"],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "AccessControl::set_role_admin",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": ["ink", "MessageResult"],
          "type": 35
        },
        "selector": "0x71a64883"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0xf9372874",
                              "ty": 0
                            }
                          },
                          "root_key": "0xf9372874",
                          "ty": 1
                        }
                      },
                      "name": "admin_roles"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x510afc69",
                              "ty": 4
                            }
                          },
                          "root_key": "0x510afc69",
                          "ty": 6
                        }
                      },
                      "name": "members"
                    }
                  ],
                  "name": "AccessControlData"
                }
              },
              "name": "access"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 9
                        }
                      },
                      "name": "abax_token_account_id"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 15
                        }
                      },
                      "name": "inflation_distribution"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 17
                        }
                      },
                      "name": "total_parts"
                    }
                  ],
                  "name": "InflatorStorage"
                }
              },
              "name": "inflator"
            }
          ],
          "name": "AbaxInflatorContract"
        }
      },
      "root_key": "0x00000000",
      "ty": 18
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 0
          },
          {
            "name": "V",
            "type": 0
          },
          {
            "name": "KeyType",
            "type": 2
          }
        ],
        "path": ["ink_storage", "lazy", "mapping", "Mapping"]
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 3
          },
          {
            "name": "R",
            "type": 5
          }
        ],
        "path": ["ink_storage_traits", "impls", "ResolverKey"]
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 4
          }
        ],
        "path": ["ink_storage_traits", "impls", "ManualKey"]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 4
          }
        ],
        "path": ["ink_storage_traits", "impls", "ManualKey"]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 7
          },
          {
            "name": "V",
            "type": 4
          },
          {
            "name": "KeyType",
            "type": 12
          }
        ],
        "path": ["ink_storage", "lazy", "mapping", "Mapping"]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "tuple": [0, 8]
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 9
          }
        ],
        "path": ["Option"]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 10,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": ["ink_primitives", "types", "AccountId"]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 11
          }
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 13
          },
          {
            "name": "R",
            "type": 14
          }
        ],
        "path": ["ink_storage_traits", "impls", "ResolverKey"]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 4
          }
        ],
        "path": ["ink_storage_traits", "impls", "ManualKey"]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 4
          }
        ],
        "path": ["ink_storage_traits", "impls", "ManualKey"]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "sequence": {
            "type": 16
          }
        }
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "tuple": [9, 17]
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "access",
                "type": 19,
                "typeName": "<AccessControlData as::ink::storage::traits::AutoStorableHint<::\nink::storage::traits::ManualKey<2106381732u32, ()>,>>::Type"
              },
              {
                "name": "inflator",
                "type": 20,
                "typeName": "<InflatorStorage as::ink::storage::traits::AutoStorableHint<::ink\n::storage::traits::ManualKey<1016160148u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": ["abax_inflator", "abax_treasury", "AbaxInflatorContract"]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "admin_roles",
                "type": 1,
                "typeName": "<Mapping<RoleType, RoleType,::ink::storage::traits::ManualKey<\nSTORAGE_KEY_ACCESSCONTROLDATA_ADMIN_ROLES>> as::ink::storage::traits\n::AutoStorableHint<::ink::storage::traits::ManualKey<\n2891666076u32, ()>,>>::Type"
              },
              {
                "name": "members",
                "type": 6,
                "typeName": "<Mapping<(RoleType, Option<AccountId>), (),::ink::storage::traits\n::ManualKey<STORAGE_KEY_ACCESSCONTROLDATA_MEMBERS>> as::ink::storage\n::traits::AutoStorableHint<::ink::storage::traits::ManualKey<\n1717912264u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": ["pendzl_contracts", "access", "access_control", "implementation", "AccessControlData"]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "abax_token_account_id",
                "type": 9,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<4266760112u32, ()>,>>::Type"
              },
              {
                "name": "inflation_distribution",
                "type": 15,
                "typeName": "<Vec<(AccountId, u16)> as::ink::storage::traits::AutoStorableHint\n<::ink::storage::traits::ManualKey<3514826069u32, ()>,>>::Type"
              },
              {
                "name": "total_parts",
                "type": 17,
                "typeName": "<u16 as::ink::storage::traits::AutoStorableHint<::ink::storage\n::traits::ManualKey<1734262226u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": ["abax_inflator", "modules", "inflator", "storage_fields", "inflator", "InflatorStorage"]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 22
          },
          {
            "name": "E",
            "type": 28
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 23
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 23
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 24,
                    "typeName": "MathError"
                  }
                ],
                "index": 0,
                "name": "MathError"
              },
              {
                "fields": [
                  {
                    "type": 25,
                    "typeName": "PSP22Error"
                  }
                ],
                "index": 1,
                "name": "PSP22Error"
              },
              {
                "fields": [
                  {
                    "type": 27,
                    "typeName": "AccessControlError"
                  }
                ],
                "index": 2,
                "name": "AccessControlError"
              },
              {
                "index": 3,
                "name": "WrongInflationDistribution"
              }
            ]
          }
        },
        "path": ["abax_inflator", "modules", "inflator", "errors", "AbaxInflatorError"]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Underflow"
              },
              {
                "index": 1,
                "name": "Overflow"
              },
              {
                "index": 2,
                "name": "DivByZero"
              }
            ]
          }
        },
        "path": ["pendzl_lang", "math", "errors", "MathError"]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 26,
                    "typeName": "String"
                  }
                ],
                "index": 0,
                "name": "Custom"
              },
              {
                "index": 1,
                "name": "InsufficientBalance"
              },
              {
                "index": 2,
                "name": "InsufficientAllowance"
              },
              {
                "index": 3,
                "name": "ZeroRecipientAddress"
              },
              {
                "index": 4,
                "name": "ZeroSenderAddress"
              },
              {
                "fields": [
                  {
                    "type": 26,
                    "typeName": "String"
                  }
                ],
                "index": 5,
                "name": "SafeTransferCheckFailed"
              },
              {
                "index": 6,
                "name": "PermitInvalidSignature"
              },
              {
                "index": 7,
                "name": "PermitExpired"
              }
            ]
          }
        },
        "path": ["pendzl_contracts", "token", "psp22", "PSP22Error"]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "InvalidCaller"
              },
              {
                "index": 1,
                "name": "MissingRole"
              },
              {
                "index": 2,
                "name": "RoleRedundant"
              }
            ]
          }
        },
        "path": ["pendzl_contracts", "access", "access_control", "AccessControlError"]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": ["ink_primitives", "LangError"]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 9
          },
          {
            "name": "E",
            "type": 28
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 15
          },
          {
            "name": "E",
            "type": 28
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 33
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 33
          },
          {
            "name": "E",
            "type": 28
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 28
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 36
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 36
          },
          {
            "name": "E",
            "type": 28
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 27
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 27
          }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 10,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": ["ink_primitives", "types", "Hash"]
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 39,
      "type": {
        "def": {
          "variant": {}
        },
        "path": ["ink_env", "types", "NoChainExtension"]
      }
    }
  ],
  "version": 5
}
