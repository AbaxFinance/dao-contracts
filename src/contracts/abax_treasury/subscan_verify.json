{
    "contracts":{
        "Cargo.lock":"# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"abax_treasury\"\nversion = \"1.0.0\"\ndependencies = [\n \"ink\",\n \"parity-scale-codec\",\n \"pendzl\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"aead\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0\"\ndependencies = [\n \"crypto-common\",\n \"generic-array\",\n]\n\n[[package]]\nname = \"array-init\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d62b7694a562cdf5a74227903507c56ab2cc8bdd1f781ed5cb4cf9c9f810bfc\"\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b4930d2cb77ce62f89ee5d5289b4ac049559b1c45539271f5ed4fdc7db34545\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitvec\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c\"\ndependencies = [\n \"funty\",\n \"radium\",\n \"tap\",\n \"wyz\",\n]\n\n[[package]]\nname = \"blake2\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"byte-slice-cast\"\nversion = \"1.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3ac9f8b63eca6fd385229b3675f6cc0dc5c8a5c8a54a59d4f52ffd670d87b0c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0ec6b951b160caa93cc0c7b209e5a3bff7aae9062213451ac99493cd844c239\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24b1f0365a6c6bb4020cd05806fd0d33c44d38046b8bd7f0e40814b9763cabfc\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"081e3f0755c1f380c2d010481b6fa2e02973586d5f2b24eebb7a2a1d98b143d8\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver 0.11.0\",\n \"semver-parser\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.98\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41c270e7540d725e65ac7f1b212ac8ce349719624d7bcff99f8e2e488e8cf03f\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"const_env\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e9e4f72c6e3398ca6da372abd9affd8f89781fe728869bbf986206e9af9627e\"\ndependencies = [\n \"const_env_impl\",\n]\n\n[[package]]\nname = \"const_env_impl\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a4f51209740b5e1589e702b3044cdd4562cef41b6da404904192ffffb852d62\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"const_format\"\nversion = \"0.2.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3a214c7af3d04997541b18d432afaff4c455e79e2029079647e72fc2bd27673\"\ndependencies = [\n \"const_format_proc_macros\",\n]\n\n[[package]]\nname = \"const_format_proc_macros\"\nversion = \"0.2.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7f6ff08fd20f4f299298a28e2dfa8a8ba1036e6cd2460ac1de7b425d76f2500\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"rand_core\",\n \"typenum\",\n]\n\n[[package]]\nname = \"curve25519-dalek\"\nversion = \"4.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a677b8922c94e01bdbb12126b0bc852f00447528dee1782229af9c720c3f348\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"curve25519-dalek-derive\",\n \"digest\",\n \"fiat-crypto\",\n \"platforms\",\n \"rustc_version\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"curve25519-dalek-derive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b750cb3417fd1b327431a470f388520309479ab0bf5e323505daf0290cd3850\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"109c1ca6e6b7f82cc233a97004ea8ed7ca123a9af07a8230878fcfda9b158bf0\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4aab4dbc9f7611d8b55048a3a16d2d010c2c8334e46304b40ac1cc14bf3b48e\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"dyn-clone\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125\"\n\n[[package]]\nname = \"either\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3dca9240753cf90908d7e4aac30f630662b02aebaa1b58a3cadabdb23385b58b\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"ethnum\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b90ca2580b73ab6a1f724b76ca11ab632df820fd6040c336200d2c1df7b3c82c\"\n\n[[package]]\nname = \"fiat-crypto\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28dea519a9695b9977216879a3ebfddf92f1c08c05d984f8996aecd6ecdc811d\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"fs2\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9564fc758e15025b46aa6643b1b77d047d1a56a1aea6e01002ac0c7026876213\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"funty\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c\"\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"getrandom_or_panic\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ea1015b5a70616b688dc230cfe50c8af89d972cb132d5a622814d29773b10b9\"\ndependencies = [\n \"rand\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d621efb26863f0e9924c6ac577e8275e5e6b77455db64ffa6c65c904e9e132c\"\ndependencies = [\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"impl-serde\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc88fc67028ae3db0c853baa36269d398d5f45b6982f95549ff5def78c935cd\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"impl-trait-for-tuples\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11d7a9f6330b71fea57921c9b61c47ee6e84f72d394754eff6163ae67e7395eb\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"ink\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d4a862aedbfda93175ddf75c9aaa2ae4c4b39ee5cee06c16d50bccce05bf5c7\"\ndependencies = [\n \"derive_more\",\n \"ink_env\",\n \"ink_macro\",\n \"ink_metadata\",\n \"ink_prelude 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"ink_storage\",\n \"pallet-contracts-uapi-next\",\n \"parity-scale-codec\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"ink_allocator\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cee56055bac6d928d425e944c5f3b69baa33c9635822fd1c00cd4afc70fde3e\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"ink_codegen\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70a1f8473fa09e0f9b6f3cb3f8d18c07c14ebf9ea1f7cdfee270f009d45ee8e9\"\ndependencies = [\n \"blake2\",\n \"derive_more\",\n \"either\",\n \"heck 0.4.1\",\n \"impl-serde\",\n \"ink_ir 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"itertools 0.12.1\",\n \"parity-scale-codec\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"ink_engine\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f357e2e867f4e222ffc4015a6e61d1073548de89f70a4e36a8b0385562777fa\"\ndependencies = [\n \"blake2\",\n \"derive_more\",\n \"ink_primitives 5.0.0\",\n \"pallet-contracts-uapi-next\",\n \"parity-scale-codec\",\n \"secp256k1\",\n \"sha2\",\n \"sha3\",\n]\n\n[[package]]\nname = \"ink_env\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cec50b7e4f8406aab25801b015d3802a52d76cfbe48ce11cfb4200fa88e296\"\ndependencies = [\n \"blake2\",\n \"cfg-if\",\n \"const_env\",\n \"derive_more\",\n \"ink_allocator\",\n \"ink_engine\",\n \"ink_prelude 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"ink_storage_traits\",\n \"num-traits\",\n \"pallet-contracts-uapi-next\",\n \"parity-scale-codec\",\n \"paste\",\n \"rlibc\",\n \"scale-decode\",\n \"scale-encode\",\n \"scale-info\",\n \"schnorrkel\",\n \"secp256k1\",\n \"sha2\",\n \"sha3\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"ink_ir\"\nversion = \"4.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b529c941518e8f450395fab9fe8ebba0a7acbb18778fc7e0a87f6248286ec72\"\ndependencies = [\n \"blake2\",\n \"either\",\n \"itertools 0.10.5\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"ink_ir\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b1ad2975551c4ed800af971289ed6d2c68ac41ffc03a42010b3e01d7360dfb2\"\ndependencies = [\n \"blake2\",\n \"either\",\n \"impl-serde\",\n \"ink_prelude 5.0.0\",\n \"itertools 0.12.1\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"ink_macro\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aee1a546f37eae3b3cd223832d31702033c5369dcfa3405899587c110a7908d3\"\ndependencies = [\n \"ink_codegen\",\n \"ink_ir 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"parity-scale-codec\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n \"synstructure 0.13.1\",\n]\n\n[[package]]\nname = \"ink_metadata\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a98fcc0ff9292ff68c7ee7b84c93533c9ff13859ec3b148faa822e2da9954fe6\"\ndependencies = [\n \"derive_more\",\n \"impl-serde\",\n \"ink_prelude 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"linkme\",\n \"parity-scale-codec\",\n \"scale-info\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"ink_prelude\"\nversion = \"4.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8cfdf91d2b442f08efb34dd3780fd6fbd3d033f63b42f62684fe47534948ef6\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"ink_prelude\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea1734d058c80aa72e59c8ae75624fd8a51791efba21469f273156c0f4cad5c9\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"ink_primitives\"\nversion = \"4.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6414bcad12ebf0c3abbbb192a09e4d06e22f662cf3e19545204e1b0684be12a1\"\ndependencies = [\n \"derive_more\",\n \"ink_prelude 4.3.0\",\n \"parity-scale-codec\",\n \"xxhash-rust\",\n]\n\n[[package]]\nname = \"ink_primitives\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11ec35ef7f45e67a53b6142d7e7f18e6d9292d76c3a2a1da14cf8423e481813d\"\ndependencies = [\n \"derive_more\",\n \"ink_prelude 5.0.0\",\n \"parity-scale-codec\",\n \"scale-decode\",\n \"scale-encode\",\n \"scale-info\",\n \"xxhash-rust\",\n]\n\n[[package]]\nname = \"ink_storage\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbdb04cad74df858c05bc9cb6f30bbf12da33c3e2cb7ca211749c001fa761aa9\"\ndependencies = [\n \"array-init\",\n \"cfg-if\",\n \"derive_more\",\n \"ink_env\",\n \"ink_metadata\",\n \"ink_prelude 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"ink_storage_traits\",\n \"pallet-contracts-uapi-next\",\n \"parity-scale-codec\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"ink_storage_traits\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83ce49e3d2935fc1ec3e73117119712b187d3123339f6a31624e92f75fa2293d\"\ndependencies = [\n \"ink_metadata\",\n \"ink_prelude 5.0.0\",\n \"ink_primitives 5.0.0\",\n \"parity-scale-codec\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"keccak\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecc2af9a1119c51f12a14607e783cb977bde58bc069ff0c3da1095e635d70654\"\ndependencies = [\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"linkme\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"833222afbfe72868ac8f9770c91a33673f0d5fefc37c9dbe94aa3548b571623f\"\ndependencies = [\n \"linkme-impl\",\n]\n\n[[package]]\nname = \"linkme-impl\"\nversion = \"0.3.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39f0dea92dbea3271557cc2e1848723967bba81f722f95026860974ec9283f08\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c8640c5d730cb13ebd907d8d04b52f55ac9a2eec55b440c8892f40d56c76c1d\"\n\n[[package]]\nname = \"merlin\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58c38e2799fc0978b65dfff8023ec7843e2330bb462f19198840b34b6582397d\"\ndependencies = [\n \"byteorder\",\n \"keccak\",\n \"rand_core\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"pallet-contracts-uapi-next\"\nversion = \"6.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd549c16296ea5b2eb7c65c56aba548b286c1be4d7675b424ff6ccb8319c97a9\"\ndependencies = [\n \"bitflags\",\n \"paste\",\n \"polkavm-derive\",\n]\n\n[[package]]\nname = \"parity-scale-codec\"\nversion = \"3.6.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"306800abfa29c7f16596b5970a588435e3d5b3149683d00c12b699cc19f895ee\"\ndependencies = [\n \"arrayvec\",\n \"bitvec\",\n \"byte-slice-cast\",\n \"impl-trait-for-tuples\",\n \"parity-scale-codec-derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"parity-scale-codec-derive\"\nversion = \"3.6.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d830939c76d294956402033aee57a6da7b438f2294eb94864c37b0569053a42c\"\ndependencies = [\n \"proc-macro-crate 3.1.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pendzl\"\nversion = \"1.0.1-v1calls\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c79ba487736e2475e44ec917040cd87dc4ba9f27fddb8c95f4bf130b4ac6a65\"\ndependencies = [\n \"ink\",\n \"parity-scale-codec\",\n \"pendzl_contracts\",\n \"pendzl_lang\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"pendzl_contracts\"\nversion = \"1.0.1-v1calls\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab692839aad45923200968ff94a3c64595f6a17f1059ae3d0e363a80a4837699\"\ndependencies = [\n \"hex\",\n \"ink\",\n \"parity-scale-codec\",\n \"pendzl_lang\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"pendzl_lang\"\nversion = \"1.0.1-v1calls\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df579ab11b77f1efacff5f4dea408927c264ad903de994b929206f3885832be7\"\ndependencies = [\n \"const_format\",\n \"ethnum\",\n \"ink\",\n \"parity-scale-codec\",\n \"pendzl_lang_macro\",\n \"scale-info\",\n \"xxhash-rust\",\n]\n\n[[package]]\nname = \"pendzl_lang_codegen\"\nversion = \"1.0.1-v1calls\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3217fddc39db986a85aff5da5448bd2d6c296d93e51a8d267cbe26cb47f8dc5e\"\ndependencies = [\n \"blake2\",\n \"cargo_metadata\",\n \"fs2\",\n \"heck 0.3.3\",\n \"ink_ir 4.3.0\",\n \"ink_primitives 4.3.0\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn 1.0.109\",\n \"synstructure 0.12.6\",\n \"unwrap\",\n]\n\n[[package]]\nname = \"pendzl_lang_macro\"\nversion = \"1.0.1-v1calls\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"680746c3225b7b0fadd7aa78a6fca44589ba16591a6a6889488110f5033888eb\"\ndependencies = [\n \"pendzl_lang_codegen\",\n \"proc-macro2\",\n \"syn 1.0.109\",\n \"synstructure 0.12.6\",\n]\n\n[[package]]\nname = \"pest\"\nversion = \"2.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"560131c633294438da9f7c4b08189194b20946c8274c6b9e38881a7874dc8ee8\"\ndependencies = [\n \"memchr\",\n \"thiserror\",\n \"ucd-trie\",\n]\n\n[[package]]\nname = \"platforms\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db23d408679286588f4d4644f965003d056e3dd5abcaaa938116871d7ce2fee7\"\n\n[[package]]\nname = \"polkavm-common\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88b4e215c80fe876147f3d58158d5dfeae7dabdd6047e175af77095b78d0035c\"\n\n[[package]]\nname = \"polkavm-derive\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6380dbe1fb03ecc74ad55d841cfc75480222d153ba69ddcb00977866cbdabdb8\"\ndependencies = [\n \"polkavm-derive-impl\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"polkavm-derive-impl\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc8211b3365bbafb2fb32057d68b0e1ca55d079f5cf6f9da9b98079b94b3987d\"\ndependencies = [\n \"polkavm-common\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\"\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f4c021e1093a56626774e81216a4ce732a735e5bad4868a03f3ed65ca0c3919\"\ndependencies = [\n \"once_cell\",\n \"toml_edit 0.19.15\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d37c51ca738a55da99dc0c4a34860fd675453b8b36209178c2249bb13651284\"\ndependencies = [\n \"toml_edit 0.21.1\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.85\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22244ce15aa966053a896d1accb3a6e68469b97c7f33f284b99f0d576879fc23\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"radium\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09\"\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rlibc\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc874b127765f014d792f16763a81245ab80500e2ad921ed4ee9e82481ee08fe\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"\ndependencies = [\n \"semver 1.0.23\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"scale-bits\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"036575c29af9b6e4866ffb7fa055dbf623fe7a9cc159b33786de6013a6969d89\"\ndependencies = [\n \"parity-scale-codec\",\n \"scale-info\",\n]\n\n[[package]]\nname = \"scale-decode\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7caaf753f8ed1ab4752c6afb20174f03598c664724e0e32628e161c21000ff76\"\ndependencies = [\n \"derive_more\",\n \"parity-scale-codec\",\n \"scale-bits\",\n \"scale-decode-derive\",\n \"scale-info\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"scale-decode-derive\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3475108a1b62c7efd1b5c65974f30109a598b2f45f23c9ae030acb9686966db\"\ndependencies = [\n \"darling\",\n \"proc-macro-crate 1.3.1\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"scale-encode\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d70cb4b29360105483fac1ed567ff95d65224a14dd275b6303ed0a654c78de5\"\ndependencies = [\n \"derive_more\",\n \"parity-scale-codec\",\n \"scale-encode-derive\",\n \"scale-info\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"scale-encode-derive\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"995491f110efdc6bea96d6a746140e32bfceb4ea47510750a5467295a4707a25\"\ndependencies = [\n \"darling\",\n \"proc-macro-crate 1.3.1\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"scale-info\"\nversion = \"2.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eca070c12893629e2cc820a9761bedf6ce1dcddc9852984d1dc734b8bd9bd024\"\ndependencies = [\n \"bitvec\",\n \"cfg-if\",\n \"derive_more\",\n \"parity-scale-codec\",\n \"scale-info-derive\",\n \"schemars\",\n \"serde\",\n]\n\n[[package]]\nname = \"scale-info-derive\"\nversion = \"2.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d35494501194174bda522a32605929eefc9ecf7e0a326c26db1fdd85881eb62\"\ndependencies = [\n \"proc-macro-crate 3.1.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"schemars\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09c024468a378b7e36765cd36702b7a90cc3cba11654f6685c8f233408e89e92\"\ndependencies = [\n \"dyn-clone\",\n \"schemars_derive\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"schemars_derive\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1eee588578aff73f856ab961cd2f79e36bc45d7ded33a7562adba4667aecc0e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde_derive_internals\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"schnorrkel\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8de18f6d8ba0aad7045f5feae07ec29899c1112584a38509a84ad7b04451eaa0\"\ndependencies = [\n \"aead\",\n \"arrayref\",\n \"arrayvec\",\n \"curve25519-dalek\",\n \"getrandom_or_panic\",\n \"merlin\",\n \"rand_core\",\n \"serde_bytes\",\n \"sha2\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"secp256k1\"\nversion = \"0.28.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d24b59d129cdadea20aea4fb2352fa053712e5d713eee47d700cd4b2bc002f10\"\ndependencies = [\n \"secp256k1-sys\",\n]\n\n[[package]]\nname = \"secp256k1-sys\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5d1746aae42c19d583c3c1a8c646bfad910498e2051c551a7f2e3c0c9fbb7eb\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f301af10236f6df4160f7c3f04eec6dbc70ace82d23326abad5edee88801c6b6\"\ndependencies = [\n \"semver-parser\",\n \"serde\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"semver-parser\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0bef5b7f9e0df16536d3961cfb6e84331c065b4066afb39768d0e319411f7\"\ndependencies = [\n \"pest\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.203\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7253ab4de971e72fb7be983802300c30b5a7f0c2e56fab8abfc6a214307c0094\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_bytes\"\nversion = \"0.11.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b8497c313fd43ab992087548117643f6fcd935cbf36f176ffda0aacf9591734\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.203\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"500cbc0ebeb6f46627f50f3f5811ccf6bf00643be300b4c3eabc0ef55dc5b5ba\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"serde_derive_internals\"\nversion = \"0.29.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18d26a20a969b9e3fdf2fc2d9f21eda6c40e2de84c9408bb5d3b05d499aae711\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.117\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"455182ea6142b14f93f4bc5320a2b31c1f266b66a4a5c858b013302a5d8cbfc3\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha3\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75872d278a8f37ef87fa0ddbda7802605cb18344497949862c0d4dcb291eba60\"\ndependencies = [\n \"digest\",\n \"keccak\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c42f3f41a2de00b01c0aaad383c5a45241efc8b2d1eda5661812fda5f3cdcff5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.12.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f36bdaa60a83aca3921b5259d5400cbf5e90fc51931376a9bd4a0eb79aa7210f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"tap\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c546c80d6be4bc6a00c0f01730c08df82eaa7a7a61f11d656526506112cc1709\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46c3384250002a6d5af4d114f2845d37b57521033f30d5c3f46c4d70e1197533\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4badfd56924ae69bcc9039335b2e017639ce3f9b001c393c1b2d1ef846ce2cbf\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.19.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a8534fd7f78b5405e860340ad6575217ce99f38d4d5c8f2442cb5ecb50090e1\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"ucd-trie\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f962df74c8c05a667b5ee8bcf162993134c104e96440b663c8daa176dc772d8c\"\n\n[[package]]\nname = \"unwrap\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e33648dd74328e622c7be51f3b40a303c63f93e6fa5f08778b6203a4c25c20f\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"wyz\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed\"\ndependencies = [\n \"tap\",\n]\n\n[[package]]\nname = \"xxhash-rust\"\nversion = \"0.8.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"927da81e25be1e1a2901d59b81b37dd2efd1fc9c9345a55007f09bf5a2d3ee03\"\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.66\",\n]\n",
        "Cargo.toml":"[package]\nname = \"abax_treasury\"\nversion = \"1.0.0\"\nauthors = [\"\"]\nedition = \"2021\"\n\n[dependencies]\nink = { version = \"5.0.0\", default-features = false }\n\nscale = { package = \"parity-scale-codec\", version = \"3.6.9\", default-features = false, features = [\n    \"derive\",\n] }\nscale-info = { version = \"2.11\", default-features = false, features = [\n    \"derive\",\n], optional = true }\n\n\npendzl = { version = \"=1.0.1-v1calls\", default-features = false, features = [\n    \"psp22\",\n    \"general_vest\",\n    \"access_control_impl\",\n    \"set_code_hash_impl\",\n\n] }\n\n\n[lib]\nname = \"abax_treasury\"\npath = \"lib.rs\"\n\n\n[features]\ndefault = [\"std\"]\nstd = [\n    \"ink/std\",\n    \"scale/std\",\n    \"scale-info\",\n    \"scale-info/std\",\n\n    # These dependencies\n    \"pendzl/std\",\n]\nink-as-dependency = []\ne2e-tests = []\n\n[profile.dev]\ncodegen-units = 16\npanic = \"abort\"\nlto = false\n[profile.release]\npanic = \"abort\"\nlto = false\n",
        "lib.rs":"#![cfg_attr(not(feature = \"std\"), no_std, no_main)]\n\nmod modules;\n\n#[pendzl::implementation(AccessControl, SetCodeHash)]\n#[ink::contract]\npub mod abax_treasury {\n    pub use crate::modules::treasury::{\n        errors::AbaxTreasuryError,\n        events::{OrderCancelled, OrderCreated, OrderExecuted, VesterChanged},\n        storage_fields::operations::OrdersStorage,\n        structs::{Operation, Order, OrderId},\n        traits::{AbaxTreasury, AbaxTreasuryView},\n    };\n    use ink::codegen::TraitCallBuilder;\n    pub use ink::{prelude::vec::Vec, ToAccountId};\n    pub use pendzl::contracts::{\n        general_vest::{GeneralVest, GeneralVestRef},\n        psp22::{PSP22Ref, PSP22},\n    };\n    use pendzl::math::errors::MathError;\n\n    pub const PARAMETERS_ADMIN: RoleType = ink::selector_id!(\"PARAMETERS_ADMIN\"); // 368_001_360_u32\n    pub const SPENDER: RoleType = ink::selector_id!(\"SPENDER\"); // 3_684_413_446_u32\n    pub const EXECUTOR: RoleType = ink::selector_id!(\"EXECUTOR\"); // 3_551_554_066_u32\n    pub const CANCELLER: RoleType = ink::selector_id!(\"CANCELLER\"); //4_141_332_106_u32\n    pub const RESCUER: RoleType = ink::selector_id!(\"RESCUER\"); //\n\n    const SIXTY_DAYS: Timestamp = 60 * 24 * 60 * 60 * 1000;\n\n    #[ink(storage)]\n    #[derive(pendzl::traits::StorageFieldGetter)]\n    pub struct AbaxTreasuryContract {\n        #[storage_field]\n        access: AccessControlData,\n        #[storage_field]\n        orders: OrdersStorage,\n    }\n\n    impl AbaxTreasuryContract {\n        #[ink(constructor)]\n        pub fn new(\n            governor: AccountId,\n            foundation: AccountId,\n            vester: AccountId,\n        ) -> Result<Self, AbaxTreasuryError> {\n            let mut instance = AbaxTreasuryContract {\n                access: AccessControlData::new(Some(governor)),\n                orders: OrdersStorage::new(&vester),\n            };\n\n            instance._grant_role(SPENDER, Some(governor))?;\n            instance._grant_role(EXECUTOR, Some(foundation))?;\n            instance._grant_role(CANCELLER, Some(foundation))?;\n            instance._grant_role(RESCUER, Some(foundation))?;\n\n            Ok(instance)\n        }\n    }\n\n    impl AbaxTreasury for AbaxTreasuryContract {\n        #[ink(message)]\n        fn set_vester(&mut self, vester: AccountId) -> Result<(), AbaxTreasuryError> {\n            let caller = self.env().caller();\n            self._ensure_has_role(PARAMETERS_ADMIN, Some(caller))?;\n\n            self.orders.set_vester(&vester);\n            self.env()\n                .emit_event::<VesterChanged>(VesterChanged { vester });\n\n            Ok(())\n        }\n\n        #[ink(message)]\n        fn create_order(\n            &mut self,\n            earliest_execution: Timestamp,\n            latest_execution: Timestamp,\n            operations: Vec<Operation>,\n        ) -> Result<OrderId, AbaxTreasuryError> {\n            let caller = self.env().caller();\n            self._ensure_has_role(SPENDER, Some(caller))?;\n\n            let order_id =\n                self.orders\n                    .insert_order(earliest_execution, latest_execution, &operations)?;\n            self.env().emit_event::<OrderCreated>(OrderCreated {\n                id: order_id,\n                earliest_execution,\n                latest_execution,\n                operations,\n            });\n\n            Ok(order_id)\n        }\n\n        #[ink(message)]\n        fn rescue_order(\n            &mut self,\n            earliest_execution: Timestamp,\n            latest_execution: Timestamp,\n            operations: Vec<Operation>,\n        ) -> Result<OrderId, AbaxTreasuryError> {\n            let caller = self.env().caller();\n            self._ensure_has_role(RESCUER, Some(caller))?;\n\n            if earliest_execution\n                < self\n                    .env()\n                    .block_timestamp()\n                    .checked_add(SIXTY_DAYS)\n                    .ok_or(MathError::Overflow)?\n            {\n                return Err(AbaxTreasuryError::WrongEarliestExecution);\n            }\n\n            let order_id =\n                self.orders\n                    .insert_order(earliest_execution, latest_execution, &operations)?;\n            self.env().emit_event::<OrderCreated>(OrderCreated {\n                id: order_id,\n                earliest_execution,\n                latest_execution,\n                operations,\n            });\n\n            Ok(order_id)\n        }\n\n        #[ink(message)]\n        fn execute_order(&mut self, id: OrderId) -> Result<(), AbaxTreasuryError> {\n            let caller = self.env().caller();\n            self._ensure_has_role(EXECUTOR, Some(caller))?;\n\n            let order = self.orders.remove_order(id)?;\n\n            let now = self.env().block_timestamp();\n            if now < order.earliest_execution {\n                return Err(AbaxTreasuryError::ToEarlyToExecute);\n            }\n\n            if now > order.latest_execution {\n                return Err(AbaxTreasuryError::ToLateToExecute);\n            }\n\n            for operation in order.operations {\n                match operation {\n                    Operation::PSP22Transfer(transfer) => {\n                        let mut psp22: PSP22Ref = transfer.asset.into();\n                        psp22\n                            .call_mut()\n                            .transfer(transfer.to, transfer.amount, Vec::<u8>::new())\n                            .call_v1()\n                            .invoke()?;\n                    }\n                    Operation::NativeTransfer(transfer) => {\n                        match self.env().transfer(transfer.to, transfer.amount) {\n                            Ok(_) => {}\n                            Err(_) => return Err(AbaxTreasuryError::NativeTransferFailed),\n                        }\n                    }\n                    Operation::Vest(vest) => {\n                        let mut vester: GeneralVestRef = self.orders.vester();\n\n                        if let Some(asset) = vest.asset {\n                            let mut psp22: PSP22Ref = asset.into();\n\n                            psp22\n                                .call_mut()\n                                .approve(vester.to_account_id(), vest.amount)\n                                .call_v1()\n                                .invoke()?;\n\n                            vester\n                                .call_mut()\n                                .create_vest(\n                                    vest.receiver,\n                                    Some(asset),\n                                    vest.amount,\n                                    vest.schedule,\n                                    Vec::<u8>::new(),\n                                )\n                                .call_v1()\n                                .invoke()?;\n                        } else {\n                            vester\n                                .call_mut()\n                                .create_vest(\n                                    vest.receiver,\n                                    None,\n                                    vest.amount,\n                                    vest.schedule,\n                                    Vec::<u8>::new(),\n                                )\n                                .call_v1()\n                                .invoke()?;\n                        }\n                    }\n                }\n            }\n\n            self.env().emit_event::<OrderExecuted>(OrderExecuted { id });\n\n            Ok(())\n        }\n\n        #[ink(message)]\n        fn cancel_order(&mut self, id: OrderId) -> Result<(), AbaxTreasuryError> {\n            let caller = self.env().caller();\n            self._ensure_has_role(CANCELLER, Some(caller))?;\n\n            self.orders.remove_order(id)?;\n            self.env()\n                .emit_event::<OrderCancelled>(OrderCancelled { id });\n\n            Ok(())\n        }\n    }\n\n    impl AbaxTreasuryView for AbaxTreasuryContract {\n        #[ink(message)]\n        fn vester(&self) -> AccountId {\n            self.orders.vester().to_account_id()\n        }\n\n        #[ink(message)]\n        fn next_order_id(&self) -> OrderId {\n            self.orders.next_order_id()\n        }\n\n        #[ink(message)]\n        fn order(&self, id: OrderId) -> Option<Order> {\n            self.orders.order(id)\n        }\n    }\n}\n",
        "modules/mod.rs":"pub mod treasury;\n",
        "modules/treasury/errors.rs":"use pendzl::{\n    contracts::{\n        access_control::AccessControlError, general_vest::VestingError, psp22::PSP22Error,\n    },\n    math::errors::MathError,\n};\n\n#[derive(Debug, PartialEq, Eq, scale::Encode, scale::Decode)]\n#[cfg_attr(feature = \"std\", derive(scale_info::TypeInfo))]\npub enum AbaxTreasuryError {\n    PSP22Error(PSP22Error),\n    MathError(MathError),\n    AccessControlError(AccessControlError),\n    VestingError(VestingError),\n\n    /// The order with the given ID does not exist - haven't been created or have been already executed or canceled.\n    NoSuchOrder,\n    ToEarlyToExecute,\n    ToLateToExecute,\n    NativeTransferFailed,\n    WrongEarliestExecution,\n}\n\nimpl From<PSP22Error> for AbaxTreasuryError {\n    fn from(e: PSP22Error) -> Self {\n        AbaxTreasuryError::PSP22Error(e)\n    }\n}\n\nimpl From<MathError> for AbaxTreasuryError {\n    fn from(e: MathError) -> Self {\n        AbaxTreasuryError::MathError(e)\n    }\n}\n\nimpl From<VestingError> for AbaxTreasuryError {\n    fn from(e: VestingError) -> Self {\n        AbaxTreasuryError::VestingError(e)\n    }\n}\n\nimpl From<AccessControlError> for AbaxTreasuryError {\n    fn from(e: AccessControlError) -> Self {\n        AbaxTreasuryError::AccessControlError(e)\n    }\n}\n",
        "modules/treasury/events.rs":"pub use ink::{prelude::vec::Vec, primitives::AccountId};\n\nuse super::structs::Operation;\n\n#[ink::event]\npub struct VesterChanged {\n    #[ink(topic)]\n    pub vester: AccountId,\n}\n\n#[ink::event]\npub struct OrderCreated {\n    #[ink(topic)]\n    pub id: u32,\n    pub earliest_execution: u64,\n    pub latest_execution: u64,\n    pub operations: Vec<Operation>,\n}\n\n#[ink::event]\npub struct OrderExecuted {\n    #[ink(topic)]\n    pub id: u32,\n}\n\n#[ink::event]\npub struct OrderCancelled {\n    #[ink(topic)]\n    pub id: u32,\n}\n",
        "modules/treasury/mod.rs":"pub mod errors;\npub mod events;\npub mod storage_fields;\npub mod structs;\npub mod traits;\n",
        "modules/treasury/storage_fields/mod.rs":"pub mod operations;\n",
        "modules/treasury/storage_fields/operations.rs":"use ink::{env::DefaultEnvironment, storage::Mapping};\nuse pendzl::{\n    contracts::general_vest::GeneralVestRef,\n    math::errors::MathError,\n    traits::{AccountId, Timestamp},\n};\n\nuse crate::modules::treasury::{\n    errors::AbaxTreasuryError,\n    events::VesterChanged,\n    structs::{Operation, Order},\n};\n\n#[derive(Debug)]\n#[pendzl::storage_item]\npub struct OrdersStorage {\n    #[lazy]\n    vester: GeneralVestRef,\n    #[lazy]\n    next_order_id: u32,\n    orders: Mapping<u32, Order>,\n}\n\nimpl OrdersStorage {\n    pub fn new(vester: &AccountId) -> Self {\n        let mut instance = OrdersStorage {\n            vester: Default::default(),\n            next_order_id: Default::default(),\n            orders: Mapping::new(),\n        };\n\n        instance.set_vester(vester);\n        ink::env::emit_event::<DefaultEnvironment, VesterChanged>(VesterChanged {\n            vester: *vester,\n        });\n\n        instance\n    }\n\n    pub fn vester(&self) -> GeneralVestRef {\n        self.vester.get().unwrap()\n    }\n\n    pub fn set_vester(&mut self, vester: &AccountId) {\n        let vester: GeneralVestRef = (*vester).into();\n        self.vester.set(&vester);\n    }\n\n    pub fn next_order_id(&self) -> u32 {\n        self.next_order_id.get().unwrap_or(0)\n    }\n\n    pub fn order(&self, id: u32) -> Option<Order> {\n        self.orders.get(id)\n    }\n\n    pub fn insert_order(\n        &mut self,\n        earliest_execution: Timestamp,\n        latest_execution: Timestamp,\n        operations: &[Operation],\n    ) -> Result<u32, AbaxTreasuryError> {\n        let order_id = self.next_order_id();\n\n        self.orders.insert(\n            order_id,\n            &Order {\n                earliest_execution,\n                latest_execution,\n                operations: operations.to_vec(),\n            },\n        );\n\n        self.next_order_id\n            .set(&(order_id.checked_add(1).ok_or(MathError::Overflow)?));\n        Ok(order_id)\n    }\n\n    pub fn remove_order(&mut self, id: u32) -> Result<Order, AbaxTreasuryError> {\n        if let Some(order) = self.orders.take(id) {\n            Ok(order)\n        } else {\n            Err(AbaxTreasuryError::NoSuchOrder)\n        }\n    }\n}\n",
        "modules/treasury/structs.rs":"use ink::{prelude::vec::Vec, primitives::AccountId};\nuse pendzl::{\n    contracts::general_vest::VestingSchedule,\n    traits::{Balance, Timestamp},\n};\n\npub type OrderId = u32;\n\n#[derive(Debug, Clone, scale::Encode, scale::Decode)]\n#[cfg_attr(\n    feature = \"std\",\n    derive(scale_info::TypeInfo, ink::storage::traits::StorageLayout)\n)]\npub struct Order {\n    pub earliest_execution: Timestamp,\n    pub latest_execution: Timestamp,\n    pub operations: Vec<Operation>,\n}\n\n#[derive(Debug, Clone, scale::Encode, scale::Decode)]\n#[cfg_attr(\n    feature = \"std\",\n    derive(scale_info::TypeInfo, ink::storage::traits::StorageLayout)\n)]\npub enum Operation {\n    NativeTransfer(NativeTransfer),\n    PSP22Transfer(PSP22Transfer),\n    Vest(Vest),\n}\n\n#[derive(Debug, Clone, scale::Encode, scale::Decode)]\n#[cfg_attr(\n    feature = \"std\",\n    derive(scale_info::TypeInfo, ink::storage::traits::StorageLayout)\n)]\npub struct Vest {\n    pub receiver: AccountId,\n    pub asset: Option<AccountId>,\n    pub amount: Balance,\n    pub schedule: VestingSchedule,\n}\n\n#[derive(Debug, Clone, scale::Encode, scale::Decode)]\n#[cfg_attr(\n    feature = \"std\",\n    derive(scale_info::TypeInfo, ink::storage::traits::StorageLayout)\n)]\npub struct PSP22Transfer {\n    pub asset: AccountId,\n    pub to: AccountId,\n    pub amount: Balance,\n}\n\n#[derive(Debug, Clone, scale::Encode, scale::Decode)]\n#[cfg_attr(\n    feature = \"std\",\n    derive(scale_info::TypeInfo, ink::storage::traits::StorageLayout)\n)]\npub struct NativeTransfer {\n    pub to: AccountId,\n    pub amount: Balance,\n}\n",
        "modules/treasury/traits.rs":"use super::{\n    errors::AbaxTreasuryError,\n    structs::{Operation, Order, OrderId},\n};\nuse ink::prelude::vec::Vec;\nuse pendzl::traits::{AccountId, Timestamp};\n\n#[ink::trait_definition]\n/// Trait defining the functions for the Abax Treasury module.\npub trait AbaxTreasury {\n    /// sets a new vester for the treasury module.\n    ///\n    /// On success Emits a 'VesterChanged' event.\n    ///\n    /// # Errors\n    ///\n    /// Returns 'AccessControlError' if the caller is not allowed to set vester.\n    #[ink(message)]\n    fn set_vester(&mut self, vester: AccountId) -> Result<(), AbaxTreasuryError>;\n\n    /// Sumbits new order for execution.\n    ///\n    /// On success Emits 'OrderCreated' event.\n    ///\n    /// # Errors\n    ///\n    /// Returns 'AccessControlError' if the caller is not allowed to submit orders.\n\n    #[ink(message)]\n    fn create_order(\n        &mut self,\n        earliest_execution: Timestamp,\n        latest_execution: Timestamp,\n        operation: Vec<Operation>,\n    ) -> Result<OrderId, AbaxTreasuryError>;\n\n    /// Sumbits new order for execution.\n    ///\n    /// On success Emits 'OrderCreated' event.\n    ///\n    /// # Errors\n    ///\n    /// Returns 'AccessControlError' if the caller is not allowed to submit orders.\n    /// Returns 'WrongErliestExecution' if the earliest execution time is earlier than 60 days in future.\n\n    #[ink(message)]\n    fn rescue_order(\n        &mut self,\n        earliest_execution: Timestamp,\n        latest_execution: Timestamp,\n        operation: Vec<Operation>,\n    ) -> Result<OrderId, AbaxTreasuryError>;\n\n    /// Executes the order with the given ID.\n    ///\n    /// On success Emits 'OrderExecuted' event.\n    ///\n    /// # Errors\n    ///\n    /// Returns 'NoSuchOrder' if the order with the given ID does not exist.\n    /// Returns 'OrderAlreadyExecuted' if the order with the given ID has already been executed.\n    /// Returns 'AccessControlError' if the caller is not allowed to execute orders.\n    #[ink(message)]\n    fn execute_order(&mut self, id: OrderId) -> Result<(), AbaxTreasuryError>;\n\n    /// Cancels the order with the given ID.\n    ///\n    /// On success Emits 'OrderCancelled' event.\n    ///\n    /// # Errors\n    ///\n    /// Returns 'NoSuchOrder' if the order with the given ID does not exist.\n    /// Returns 'OrderAlreadyExecuted' if the order with the given ID has already been executed.\n    /// Returns 'AccessControlError' if the caller is not allowed to cancel orders.\n    #[ink(message)]\n    fn cancel_order(&mut self, id: OrderId) -> Result<(), AbaxTreasuryError>;\n}\n\n#[ink::trait_definition]\npub trait AbaxTreasuryView {\n    /// Returns the account ID of the current vester.\n    #[ink(message)]\n    fn vester(&self) -> AccountId;\n\n    /// Returns the next order ID.\n    #[ink(message)]\n    fn next_order_id(&self) -> OrderId;\n\n    /// Returns the order with the given ID.\n    #[ink(message)]\n    fn order(&self, id: OrderId) -> Option<Order>;\n}\n"
    },
    "manifest-path":"Cargo.toml"
}
